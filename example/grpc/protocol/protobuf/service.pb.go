// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package protocol

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Timestamp struct {
	Timestamp            uint64   `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Timestamp) Reset()         { *m = Timestamp{} }
func (m *Timestamp) String() string { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()    {}
func (*Timestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *Timestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timestamp.Unmarshal(m, b)
}
func (m *Timestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timestamp.Marshal(b, m, deterministic)
}
func (m *Timestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timestamp.Merge(m, src)
}
func (m *Timestamp) XXX_Size() int {
	return xxx_messageInfo_Timestamp.Size(m)
}
func (m *Timestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_Timestamp.DiscardUnknown(m)
}

var xxx_messageInfo_Timestamp proto.InternalMessageInfo

func (m *Timestamp) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type ServerInfo struct {
	ServerID             string   `protobuf:"bytes,1,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	ServiceType          string   `protobuf:"bytes,2,opt,name=ServiceType,proto3" json:"ServiceType,omitempty"`
	AdditionalInfo       string   `protobuf:"bytes,3,opt,name=AdditionalInfo,proto3" json:"AdditionalInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerInfo) Reset()         { *m = ServerInfo{} }
func (m *ServerInfo) String() string { return proto.CompactTextString(m) }
func (*ServerInfo) ProtoMessage()    {}
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *ServerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerInfo.Unmarshal(m, b)
}
func (m *ServerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerInfo.Marshal(b, m, deterministic)
}
func (m *ServerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerInfo.Merge(m, src)
}
func (m *ServerInfo) XXX_Size() int {
	return xxx_messageInfo_ServerInfo.Size(m)
}
func (m *ServerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ServerInfo proto.InternalMessageInfo

func (m *ServerInfo) GetServerID() string {
	if m != nil {
		return m.ServerID
	}
	return ""
}

func (m *ServerInfo) GetServiceType() string {
	if m != nil {
		return m.ServiceType
	}
	return ""
}

func (m *ServerInfo) GetAdditionalInfo() string {
	if m != nil {
		return m.AdditionalInfo
	}
	return ""
}

type S2CInfo struct {
	ServerInfo           *ServerInfo `protobuf:"bytes,1,opt,name=ServerInfo,proto3" json:"ServerInfo,omitempty"`
	RequestSendOption    string      `protobuf:"bytes,2,opt,name=RequestSendOption,proto3" json:"RequestSendOption,omitempty"`
	Candidates           []*S2CInfo  `protobuf:"bytes,3,rep,name=Candidates,proto3" json:"Candidates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *S2CInfo) Reset()         { *m = S2CInfo{} }
func (m *S2CInfo) String() string { return proto.CompactTextString(m) }
func (*S2CInfo) ProtoMessage()    {}
func (*S2CInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *S2CInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CInfo.Unmarshal(m, b)
}
func (m *S2CInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CInfo.Marshal(b, m, deterministic)
}
func (m *S2CInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CInfo.Merge(m, src)
}
func (m *S2CInfo) XXX_Size() int {
	return xxx_messageInfo_S2CInfo.Size(m)
}
func (m *S2CInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CInfo proto.InternalMessageInfo

func (m *S2CInfo) GetServerInfo() *ServerInfo {
	if m != nil {
		return m.ServerInfo
	}
	return nil
}

func (m *S2CInfo) GetRequestSendOption() string {
	if m != nil {
		return m.RequestSendOption
	}
	return ""
}

func (m *S2CInfo) GetCandidates() []*S2CInfo {
	if m != nil {
		return m.Candidates
	}
	return nil
}

type S2SInfo struct {
	ServerInfo           *ServerInfo `protobuf:"bytes,1,opt,name=ServerInfo,proto3" json:"ServerInfo,omitempty"`
	ResponseSendOption   string      `protobuf:"bytes,2,opt,name=ResponseSendOption,proto3" json:"ResponseSendOption,omitempty"`
	RequestSendOption    string      `protobuf:"bytes,3,opt,name=RequestSendOption,proto3" json:"RequestSendOption,omitempty"`
	Candidates           []*S2SInfo  `protobuf:"bytes,4,rep,name=Candidates,proto3" json:"Candidates,omitempty"`
	S2CInfo              *S2CInfo    `protobuf:"bytes,5,opt,name=S2CInfo,proto3" json:"S2CInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *S2SInfo) Reset()         { *m = S2SInfo{} }
func (m *S2SInfo) String() string { return proto.CompactTextString(m) }
func (*S2SInfo) ProtoMessage()    {}
func (*S2SInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *S2SInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2SInfo.Unmarshal(m, b)
}
func (m *S2SInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2SInfo.Marshal(b, m, deterministic)
}
func (m *S2SInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2SInfo.Merge(m, src)
}
func (m *S2SInfo) XXX_Size() int {
	return xxx_messageInfo_S2SInfo.Size(m)
}
func (m *S2SInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2SInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2SInfo proto.InternalMessageInfo

func (m *S2SInfo) GetServerInfo() *ServerInfo {
	if m != nil {
		return m.ServerInfo
	}
	return nil
}

func (m *S2SInfo) GetResponseSendOption() string {
	if m != nil {
		return m.ResponseSendOption
	}
	return ""
}

func (m *S2SInfo) GetRequestSendOption() string {
	if m != nil {
		return m.RequestSendOption
	}
	return ""
}

func (m *S2SInfo) GetCandidates() []*S2SInfo {
	if m != nil {
		return m.Candidates
	}
	return nil
}

func (m *S2SInfo) GetS2CInfo() *S2CInfo {
	if m != nil {
		return m.S2CInfo
	}
	return nil
}

type S2SRequest struct {
	S2SInfo              *S2SInfo `protobuf:"bytes,1,opt,name=S2SInfo,proto3" json:"S2SInfo,omitempty"`
	Disconnect           bool     `protobuf:"varint,2,opt,name=Disconnect,proto3" json:"Disconnect,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2SRequest) Reset()         { *m = S2SRequest{} }
func (m *S2SRequest) String() string { return proto.CompactTextString(m) }
func (*S2SRequest) ProtoMessage()    {}
func (*S2SRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *S2SRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2SRequest.Unmarshal(m, b)
}
func (m *S2SRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2SRequest.Marshal(b, m, deterministic)
}
func (m *S2SRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2SRequest.Merge(m, src)
}
func (m *S2SRequest) XXX_Size() int {
	return xxx_messageInfo_S2SRequest.Size(m)
}
func (m *S2SRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_S2SRequest.DiscardUnknown(m)
}

var xxx_messageInfo_S2SRequest proto.InternalMessageInfo

func (m *S2SRequest) GetS2SInfo() *S2SInfo {
	if m != nil {
		return m.S2SInfo
	}
	return nil
}

func (m *S2SRequest) GetDisconnect() bool {
	if m != nil {
		return m.Disconnect
	}
	return false
}

type S2SResponse struct {
	S2SInfo              *S2SInfo `protobuf:"bytes,1,opt,name=S2SInfo,proto3" json:"S2SInfo,omitempty"`
	Timeout              int64    `protobuf:"varint,2,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
	Reject               bool     `protobuf:"varint,3,opt,name=Reject,proto3" json:"Reject,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2SResponse) Reset()         { *m = S2SResponse{} }
func (m *S2SResponse) String() string { return proto.CompactTextString(m) }
func (*S2SResponse) ProtoMessage()    {}
func (*S2SResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{5}
}

func (m *S2SResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2SResponse.Unmarshal(m, b)
}
func (m *S2SResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2SResponse.Marshal(b, m, deterministic)
}
func (m *S2SResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2SResponse.Merge(m, src)
}
func (m *S2SResponse) XXX_Size() int {
	return xxx_messageInfo_S2SResponse.Size(m)
}
func (m *S2SResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_S2SResponse.DiscardUnknown(m)
}

var xxx_messageInfo_S2SResponse proto.InternalMessageInfo

func (m *S2SResponse) GetS2SInfo() *S2SInfo {
	if m != nil {
		return m.S2SInfo
	}
	return nil
}

func (m *S2SResponse) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *S2SResponse) GetReject() bool {
	if m != nil {
		return m.Reject
	}
	return false
}

type ClientInfo struct {
	ClientID             string   `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	ServiceType          string   `protobuf:"bytes,2,opt,name=ServiceType,proto3" json:"ServiceType,omitempty"`
	AdditionalInfo       string   `protobuf:"bytes,3,opt,name=AdditionalInfo,proto3" json:"AdditionalInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientInfo) Reset()         { *m = ClientInfo{} }
func (m *ClientInfo) String() string { return proto.CompactTextString(m) }
func (*ClientInfo) ProtoMessage()    {}
func (*ClientInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6}
}

func (m *ClientInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientInfo.Unmarshal(m, b)
}
func (m *ClientInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientInfo.Marshal(b, m, deterministic)
}
func (m *ClientInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientInfo.Merge(m, src)
}
func (m *ClientInfo) XXX_Size() int {
	return xxx_messageInfo_ClientInfo.Size(m)
}
func (m *ClientInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ClientInfo proto.InternalMessageInfo

func (m *ClientInfo) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *ClientInfo) GetServiceType() string {
	if m != nil {
		return m.ServiceType
	}
	return ""
}

func (m *ClientInfo) GetAdditionalInfo() string {
	if m != nil {
		return m.AdditionalInfo
	}
	return ""
}

type C2SInfo struct {
	ClientInfo           *ClientInfo `protobuf:"bytes,1,opt,name=ClientInfo,proto3" json:"ClientInfo,omitempty"`
	ResponseSendOption   string      `protobuf:"bytes,2,opt,name=ResponseSendOption,proto3" json:"ResponseSendOption,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *C2SInfo) Reset()         { *m = C2SInfo{} }
func (m *C2SInfo) String() string { return proto.CompactTextString(m) }
func (*C2SInfo) ProtoMessage()    {}
func (*C2SInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{7}
}

func (m *C2SInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_C2SInfo.Unmarshal(m, b)
}
func (m *C2SInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_C2SInfo.Marshal(b, m, deterministic)
}
func (m *C2SInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SInfo.Merge(m, src)
}
func (m *C2SInfo) XXX_Size() int {
	return xxx_messageInfo_C2SInfo.Size(m)
}
func (m *C2SInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SInfo.DiscardUnknown(m)
}

var xxx_messageInfo_C2SInfo proto.InternalMessageInfo

func (m *C2SInfo) GetClientInfo() *ClientInfo {
	if m != nil {
		return m.ClientInfo
	}
	return nil
}

func (m *C2SInfo) GetResponseSendOption() string {
	if m != nil {
		return m.ResponseSendOption
	}
	return ""
}

type C2SRequest struct {
	C2SInfo              *C2SInfo `protobuf:"bytes,1,opt,name=C2SInfo,proto3" json:"C2SInfo,omitempty"`
	Disconnect           bool     `protobuf:"varint,2,opt,name=Disconnect,proto3" json:"Disconnect,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2SRequest) Reset()         { *m = C2SRequest{} }
func (m *C2SRequest) String() string { return proto.CompactTextString(m) }
func (*C2SRequest) ProtoMessage()    {}
func (*C2SRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{8}
}

func (m *C2SRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_C2SRequest.Unmarshal(m, b)
}
func (m *C2SRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_C2SRequest.Marshal(b, m, deterministic)
}
func (m *C2SRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2SRequest.Merge(m, src)
}
func (m *C2SRequest) XXX_Size() int {
	return xxx_messageInfo_C2SRequest.Size(m)
}
func (m *C2SRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_C2SRequest.DiscardUnknown(m)
}

var xxx_messageInfo_C2SRequest proto.InternalMessageInfo

func (m *C2SRequest) GetC2SInfo() *C2SInfo {
	if m != nil {
		return m.C2SInfo
	}
	return nil
}

func (m *C2SRequest) GetDisconnect() bool {
	if m != nil {
		return m.Disconnect
	}
	return false
}

type S2CResponse struct {
	S2CInfo              *S2CInfo `protobuf:"bytes,1,opt,name=S2CInfo,proto3" json:"S2CInfo,omitempty"`
	Timeout              int64    `protobuf:"varint,2,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
	Reject               bool     `protobuf:"varint,3,opt,name=Reject,proto3" json:"Reject,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CResponse) Reset()         { *m = S2CResponse{} }
func (m *S2CResponse) String() string { return proto.CompactTextString(m) }
func (*S2CResponse) ProtoMessage()    {}
func (*S2CResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{9}
}

func (m *S2CResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CResponse.Unmarshal(m, b)
}
func (m *S2CResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CResponse.Marshal(b, m, deterministic)
}
func (m *S2CResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CResponse.Merge(m, src)
}
func (m *S2CResponse) XXX_Size() int {
	return xxx_messageInfo_S2CResponse.Size(m)
}
func (m *S2CResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CResponse.DiscardUnknown(m)
}

var xxx_messageInfo_S2CResponse proto.InternalMessageInfo

func (m *S2CResponse) GetS2CInfo() *S2CInfo {
	if m != nil {
		return m.S2CInfo
	}
	return nil
}

func (m *S2CResponse) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *S2CResponse) GetReject() bool {
	if m != nil {
		return m.Reject
	}
	return false
}

func init() {
	proto.RegisterType((*Timestamp)(nil), "protocol.Timestamp")
	proto.RegisterType((*ServerInfo)(nil), "protocol.ServerInfo")
	proto.RegisterType((*S2CInfo)(nil), "protocol.S2CInfo")
	proto.RegisterType((*S2SInfo)(nil), "protocol.S2SInfo")
	proto.RegisterType((*S2SRequest)(nil), "protocol.S2SRequest")
	proto.RegisterType((*S2SResponse)(nil), "protocol.S2SResponse")
	proto.RegisterType((*ClientInfo)(nil), "protocol.ClientInfo")
	proto.RegisterType((*C2SInfo)(nil), "protocol.C2SInfo")
	proto.RegisterType((*C2SRequest)(nil), "protocol.C2SRequest")
	proto.RegisterType((*S2CResponse)(nil), "protocol.S2CResponse")
}

func init() {
	proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626)
}

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 444 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xdf, 0xea, 0xd3, 0x30,
	0x14, 0x66, 0xb6, 0xfe, 0xb6, 0x9d, 0xa2, 0xb0, 0x38, 0xa5, 0x0c, 0x91, 0xd1, 0x0b, 0x99, 0x28,
	0x45, 0x3b, 0x5f, 0x40, 0x32, 0x90, 0xdd, 0xe8, 0x48, 0x76, 0xe3, 0x65, 0x6d, 0x23, 0x54, 0xba,
	0xa4, 0x36, 0xdd, 0xc0, 0xb7, 0xf1, 0x45, 0x05, 0x69, 0x9a, 0xb6, 0xe9, 0xda, 0x89, 0x55, 0xaf,
	0xc6, 0x39, 0x27, 0x3b, 0xdf, 0x9f, 0xf3, 0x51, 0x78, 0x20, 0x59, 0x7e, 0x49, 0x22, 0xe6, 0x67,
	0xb9, 0x28, 0x04, 0x9a, 0xa9, 0x9f, 0x48, 0xa4, 0xde, 0x0b, 0x98, 0x1f, 0x93, 0x13, 0x93, 0x45,
	0x78, 0xca, 0xd0, 0x53, 0xa3, 0x70, 0x27, 0xeb, 0xc9, 0xc6, 0x26, 0x6d, 0xc3, 0xcb, 0x01, 0x28,
	0xcb, 0x2f, 0x2c, 0xdf, 0xf3, 0x2f, 0x02, 0xad, 0x60, 0xa6, 0xab, 0x9d, 0x7a, 0x3a, 0x27, 0x4d,
	0x8d, 0xd6, 0xe0, 0xd0, 0x0a, 0xef, 0xf8, 0x3d, 0x63, 0xee, 0x3d, 0x35, 0x36, 0x5b, 0xe8, 0x39,
	0x3c, 0x7c, 0x17, 0xc7, 0x49, 0x91, 0x08, 0x1e, 0xa6, 0xe5, 0x3e, 0xd7, 0x52, 0x8f, 0xae, 0xba,
	0xde, 0x8f, 0x09, 0x4c, 0x69, 0x80, 0x15, 0xe2, 0x5b, 0x13, 0x5f, 0x61, 0x3a, 0xc1, 0xd2, 0xaf,
	0x95, 0xf8, 0xed, 0x8c, 0x98, 0x3c, 0x5f, 0xc1, 0x82, 0xb0, 0x6f, 0x67, 0x26, 0x0b, 0xca, 0x78,
	0xfc, 0x31, 0x2b, 0x97, 0x6b, 0x46, 0xfd, 0x01, 0x7a, 0x03, 0x80, 0x43, 0x1e, 0x27, 0x71, 0x58,
	0x30, 0xe9, 0x5a, 0x6b, 0x6b, 0xe3, 0x04, 0x0b, 0x03, 0xa3, 0xa2, 0x42, 0x8c, 0x47, 0xde, 0x4f,
	0x45, 0x91, 0xfe, 0x03, 0x45, 0x1f, 0x10, 0x61, 0x32, 0x13, 0x5c, 0xb2, 0x1e, 0xc7, 0x81, 0xc9,
	0xb0, 0x24, 0xeb, 0xcf, 0x24, 0xd9, 0x7d, 0x49, 0xf4, 0x5a, 0x12, 0x7a, 0xd9, 0x98, 0xee, 0xde,
	0x57, 0x1a, 0x06, 0x2c, 0xa8, 0x5f, 0x78, 0x9f, 0x00, 0x68, 0x40, 0x35, 0x6e, 0xf5, 0x57, 0x6a,
	0xc8, 0x1f, 0x80, 0x6a, 0xec, 0x7a, 0x06, 0xb0, 0x4b, 0x64, 0x24, 0x38, 0x67, 0x51, 0xa1, 0x04,
	0xcf, 0x88, 0xd1, 0xf1, 0x52, 0x70, 0xd4, 0xea, 0xca, 0x81, 0x71, 0xbb, 0x5d, 0x98, 0x96, 0xd1,
	0x15, 0xe7, 0x6a, 0xb1, 0x45, 0xea, 0x12, 0x3d, 0x81, 0x3b, 0xc2, 0xbe, 0x96, 0x88, 0x96, 0x42,
	0xd4, 0x55, 0x99, 0x6f, 0x9c, 0x26, 0x8c, 0x17, 0x75, 0xbe, 0x75, 0xd5, 0xe4, 0xbb, 0xae, 0xff,
	0x63, 0xbe, 0x05, 0x4c, 0x71, 0x9b, 0x9d, 0x16, 0xbe, 0x9f, 0x9d, 0x76, 0x46, 0x4c, 0x9a, 0x23,
	0xb3, 0x53, 0x5e, 0x0b, 0x77, 0xae, 0x85, 0x6f, 0x39, 0x8a, 0x6b, 0x47, 0xf1, 0x98, 0x6b, 0xe1,
	0xee, 0xb5, 0xf0, 0xad, 0x6b, 0x75, 0x43, 0x34, 0xfe, 0x5a, 0x81, 0x54, 0xb1, 0xd3, 0x9e, 0xa3,
	0x2d, 0xd8, 0x07, 0x91, 0xa6, 0x68, 0xd9, 0x49, 0x84, 0x96, 0xb9, 0x7a, 0x7c, 0xd5, 0xd5, 0x0c,
	0x5f, 0x83, 0x7d, 0xd8, 0x7f, 0x78, 0x8f, 0x1e, 0xb5, 0xe3, 0xe6, 0x6b, 0xb7, 0x1a, 0x6a, 0x56,
	0xa0, 0xf8, 0x37, 0xa0, 0xf8, 0x06, 0x28, 0xfe, 0x7b, 0xd0, 0xcf, 0x77, 0xaa, 0xb7, 0xfd, 0x15,
	0x00, 0x00, 0xff, 0xff, 0x0c, 0xfc, 0xd1, 0x43, 0xc4, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// S2SServiceClient is the client API for S2SService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type S2SServiceClient interface {
	Poll(ctx context.Context, in *S2SRequest, opts ...grpc.CallOption) (*S2SResponse, error)
	PING(ctx context.Context, in *Timestamp, opts ...grpc.CallOption) (*Timestamp, error)
}

type s2SServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewS2SServiceClient(cc grpc.ClientConnInterface) S2SServiceClient {
	return &s2SServiceClient{cc}
}

func (c *s2SServiceClient) Poll(ctx context.Context, in *S2SRequest, opts ...grpc.CallOption) (*S2SResponse, error) {
	out := new(S2SResponse)
	err := c.cc.Invoke(ctx, "/protocol.S2SService/Poll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *s2SServiceClient) PING(ctx context.Context, in *Timestamp, opts ...grpc.CallOption) (*Timestamp, error) {
	out := new(Timestamp)
	err := c.cc.Invoke(ctx, "/protocol.S2SService/PING", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// S2SServiceServer is the server API for S2SService service.
type S2SServiceServer interface {
	Poll(context.Context, *S2SRequest) (*S2SResponse, error)
	PING(context.Context, *Timestamp) (*Timestamp, error)
}

// UnimplementedS2SServiceServer can be embedded to have forward compatible implementations.
type UnimplementedS2SServiceServer struct {
}

func (*UnimplementedS2SServiceServer) Poll(ctx context.Context, req *S2SRequest) (*S2SResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Poll not implemented")
}
func (*UnimplementedS2SServiceServer) PING(ctx context.Context, req *Timestamp) (*Timestamp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PING not implemented")
}

func RegisterS2SServiceServer(s *grpc.Server, srv S2SServiceServer) {
	s.RegisterService(&_S2SService_serviceDesc, srv)
}

func _S2SService_Poll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(S2SRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(S2SServiceServer).Poll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.S2SService/Poll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(S2SServiceServer).Poll(ctx, req.(*S2SRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _S2SService_PING_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Timestamp)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(S2SServiceServer).PING(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.S2SService/PING",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(S2SServiceServer).PING(ctx, req.(*Timestamp))
	}
	return interceptor(ctx, in, info, handler)
}

var _S2SService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.S2SService",
	HandlerType: (*S2SServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Poll",
			Handler:    _S2SService_Poll_Handler,
		},
		{
			MethodName: "PING",
			Handler:    _S2SService_PING_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

// S2CServiceClient is the client API for S2CService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type S2CServiceClient interface {
	Poll(ctx context.Context, in *C2SRequest, opts ...grpc.CallOption) (*S2CResponse, error)
	PING(ctx context.Context, in *Timestamp, opts ...grpc.CallOption) (*Timestamp, error)
}

type s2CServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewS2CServiceClient(cc grpc.ClientConnInterface) S2CServiceClient {
	return &s2CServiceClient{cc}
}

func (c *s2CServiceClient) Poll(ctx context.Context, in *C2SRequest, opts ...grpc.CallOption) (*S2CResponse, error) {
	out := new(S2CResponse)
	err := c.cc.Invoke(ctx, "/protocol.S2CService/Poll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *s2CServiceClient) PING(ctx context.Context, in *Timestamp, opts ...grpc.CallOption) (*Timestamp, error) {
	out := new(Timestamp)
	err := c.cc.Invoke(ctx, "/protocol.S2CService/PING", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// S2CServiceServer is the server API for S2CService service.
type S2CServiceServer interface {
	Poll(context.Context, *C2SRequest) (*S2CResponse, error)
	PING(context.Context, *Timestamp) (*Timestamp, error)
}

// UnimplementedS2CServiceServer can be embedded to have forward compatible implementations.
type UnimplementedS2CServiceServer struct {
}

func (*UnimplementedS2CServiceServer) Poll(ctx context.Context, req *C2SRequest) (*S2CResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Poll not implemented")
}
func (*UnimplementedS2CServiceServer) PING(ctx context.Context, req *Timestamp) (*Timestamp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PING not implemented")
}

func RegisterS2CServiceServer(s *grpc.Server, srv S2CServiceServer) {
	s.RegisterService(&_S2CService_serviceDesc, srv)
}

func _S2CService_Poll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(C2SRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(S2CServiceServer).Poll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.S2CService/Poll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(S2CServiceServer).Poll(ctx, req.(*C2SRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _S2CService_PING_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Timestamp)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(S2CServiceServer).PING(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.S2CService/PING",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(S2CServiceServer).PING(ctx, req.(*Timestamp))
	}
	return interceptor(ctx, in, info, handler)
}

var _S2CService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.S2CService",
	HandlerType: (*S2CServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Poll",
			Handler:    _S2CService_Poll_Handler,
		},
		{
			MethodName: "PING",
			Handler:    _S2CService_PING_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
